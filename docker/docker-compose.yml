version: '3.4'

services: #this is a configuration of our container which runs Java APP (Spring Boot)
  #all services must be part of the same network to be visible to others
  #Java App (SpringBoot)
  my-app-srv:
    build:
      context: ..
      dockerfile: my-app-srv.dockerfile
    image: master-slave-demo #this is our custom name for image in the file above
    ports: #port inside container and port outside of container
      - "8080:8080"
    volumes: #here mapping of folders is done conf folder into config!
      - ./conf:/config
    environment:
      SPRING_PROFILES_ACTIVE: prod #with this when packing our app, we don't have to define which is active profile
    container_name: my-app-srv
    networks: #we define our network name
      - privateNet

  # MySQL 5.7.36
  db1:
    build:
      context: ..
      dockerfile: my-database.dockerfile
    image: db1 #this will create a new CUSTOM image name for us
    ports:
      - "3307:3307" #we already have db on 3306
    volumes: #with this we persist it(and won't lose it when containers are down)!
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data1:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_TCP_PORT: 3307
    container_name: db1
    networks:
      - privateNet

  # MySQL 5.7.36
  db2:
    build:
      context: ..
      dockerfile: my-database.dockerfile
    image: db2
    ports:
      - "3309:3309"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data2:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_TCP_PORT: 3309
    container_name: db2
    networks:
      - privateNet

networks:
  privateNet: